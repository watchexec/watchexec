name: Test suite

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
    tags-ignore:
      - "*"

env:
  CARGO_TERM_COLOR: always
  CARGO_UNSTABLE_SPARSE_REGISTRY: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  libs:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos
          - ubuntu
          - windows

    name: Test libraries ${{ matrix.platform }}
    runs-on: "${{ matrix.platform }}-latest"

    steps:
    - uses: actions/checkout@v4
    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup default stable

    # https://github.com/actions/cache/issues/752
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

    - uses: Swatinem/rust-cache@v2

    - name: Run library test suite
      run: cargo test --workspace --exclude watchexec-cli --exclude watchexec-events

    - name: Run watchexec-events integration tests
      run: cargo test -p watchexec-events -F serde

  cli-e2e:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos
          - ubuntu
          - windows

    name: Test CLI (e2e) ${{ matrix.platform }}
    runs-on: "${{ matrix.platform }}-latest"

    steps:
    - uses: actions/checkout@v4
    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup default stable

    # https://github.com/actions/cache/issues/752
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

    - name: Install coreutils on mac
      if: ${{ matrix.platform == 'macos' }}
      run: brew install coreutils

    - uses: Swatinem/rust-cache@v2

    - name: Build CLI programs
      run: cargo build

    - name: Run CLI integration tests
      run: crates/cli/run-tests.sh ${{ matrix.platform }}
      shell: bash
      env:
        WATCHEXEC_BIN: target/debug/watchexec
        TEST_SOCKETFD_BIN: target/debug/test-socketfd

  cli-docs:

    name: Test CLI docs
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup default stable

    - uses: Swatinem/rust-cache@v2

    - name: Generate manpage
      run: cargo run -p watchexec-cli -- --manual > doc/watchexec.1
    - name: Check that manpage is up to date
      run: git diff --exit-code -- doc/

    - name: Generate completions
      run: bin/completions
    - name: Check that completions are up to date
      run: git diff --exit-code -- completions/

  cli-unit:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos
          - ubuntu
          - windows

    name: Test CLI (unit) ${{ matrix.platform }}
    runs-on: "${{ matrix.platform }}-latest"

    steps:
    - uses: actions/checkout@v4
    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup default stable

    # https://github.com/actions/cache/issues/752
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

    - uses: Swatinem/rust-cache@v2

    - name: Run CLI unit tests
      run: cargo test -p watchexec-cli

  bosion:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos
          - ubuntu
          - windows

    name: Bosion integration tests on ${{ matrix.platform }}
    runs-on: "${{ matrix.platform }}-latest"

    steps:
    - uses: actions/checkout@v4
    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup default stable

    # https://github.com/actions/cache/issues/752
    - if: ${{ runner.os == 'Windows' }}
      name: Use GNU tar
      shell: cmd
      run: |
        echo "Adding GNU tar to PATH"
        echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

    - uses: Swatinem/rust-cache@v2

    - name: Run bosion integration tests
      run: ./run-tests.sh
      working-directory: crates/bosion
      shell: bash

  cross-checks:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-unknown-freebsd

    name: Typecheck only on ${{ matrix.target }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup default stable
        rustup target add ${{ matrix.target }}

    - if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get install -y musl-tools

    - uses: Swatinem/rust-cache@v2
    - run: cargo check --target ${{ matrix.target }}

  tests-pass:
    if: always()
    name: Tests pass
    needs:
    - bosion
    - cli-e2e
    - cli-unit
    - cross-checks
    - libs
    runs-on: ubuntu-latest
    steps:
    - uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
