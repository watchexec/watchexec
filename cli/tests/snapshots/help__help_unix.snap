---
source: cli/tests/help.rs
assertion_line: 16
expression: "String::from_utf8(output.stdout).unwrap()"
---
watchexec 1.18.12
Execute commands when watched files change

USAGE:
    watchexec [FLAGS] [OPTIONS] <command>...

FLAGS:
    -c, --clear                Clear screen before executing command
    -h, --help                 Prints help information
        --no-default-ignore    Skip auto-ignoring of commonly ignored globs
        --no-environment       Do not set WATCHEXEC_*_PATH environment variables for the command
        --no-global-ignore     Skip auto-loading of global or environment-wide ignore files
        --no-meta              Ignore metadata changes
        --no-process-group     Do not use a process group when running the command
        --no-project-ignore    Skip auto-loading of project ignore files (.gitignore, .ignore, etc)
    -n, --no-shell             Do not wrap command in a shell. Deprecated: use --shell=none instead.
        --no-vcs-ignore        Skip auto-loading of VCS (Git, etc) ignore files
    -N, --notify               Send a desktop notification when the command ends
    -p, --postpone             Wait until first change to execute command
        --print-events         Print events that trigger actions
    -r, --restart              Restart the process if it's still running. Shorthand for --on-busy-update=restart
    -V, --version              Prints version information
    -v, --verbose              Print debugging messages (-v, -vv, -vvv, -vvvv; use -vvv for bug reports)

OPTIONS:
    -E, --env <name=value>...                Add an environment variable to the command
        --workdir <path>                     Change the working directory of the command
    -d, --debounce <milliseconds>            Set the timeout between detected change and command execution, defaults to
                                             50ms
    -e, --exts <extensions>                  Comma-separated list of file extensions to watch (e.g. js,css,html)
    -f, --filter <pattern>...                Ignore all modifications except those matching the pattern
    -i, --ignore <pattern>...                Ignore modifications to paths matching the pattern
        --on-busy-update <on-busy-update>    Select the behaviour to use when receiving events while the command is
                                             running. Current default is queue, will change to do-nothing in 2.0.
                                             [possible values: do-nothing, queue, restart, signal]
    -w, --watch <path>...                    Watch a specific file or directory
        --force-poll <interval>              Force polling mode (interval in milliseconds)
        --project-origin <path>              Override the project origin: the directory from which ignore files are
                                             detected
        --shell <shell>                      Use a different shell, or `none`. Defaults to `sh` (until 2.0, where that
                                             will change to `$SHELL`). E.g. --shell=bash
    -s, --signal <signal>                    Specify the signal to send when using --on-busy-update=signal

ARGS:
    <command>...    Command to execute

Use @argfile as first argument to load arguments from the file `argfile` (one argument per line) which will be inserted
in place of the @argfile (further arguments on the CLI will override or add onto those in the file).

